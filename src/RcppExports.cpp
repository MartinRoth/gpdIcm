// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// MakeScaleAdmissible
NumericVector MakeScaleAdmissible(NumericVector scale, NumericVector y, double shape);
RcppExport SEXP gpdIcm_MakeScaleAdmissible(SEXP scaleSEXP, SEXP ySEXP, SEXP shapeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    __result = Rcpp::wrap(MakeScaleAdmissible(scale, y, shape));
    return __result;
END_RCPP
}
// gpd_scale_isotonic_fit
List gpd_scale_isotonic_fit(NumericVector y, NumericVector start, double shape, int max_repetitions);
RcppExport SEXP gpdIcm_gpd_scale_isotonic_fit(SEXP ySEXP, SEXP startSEXP, SEXP shapeSEXP, SEXP max_repetitionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type start(startSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< int >::type max_repetitions(max_repetitionsSEXP);
    __result = Rcpp::wrap(gpd_scale_isotonic_fit(y, start, shape, max_repetitions));
    return __result;
END_RCPP
}
// gpd_isotonic_scale_projected_gradient
List gpd_isotonic_scale_projected_gradient(NumericVector y, NumericVector scale, double shape, int max_repetitions);
RcppExport SEXP gpdIcm_gpd_isotonic_scale_projected_gradient(SEXP ySEXP, SEXP scaleSEXP, SEXP shapeSEXP, SEXP max_repetitionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< int >::type max_repetitions(max_repetitionsSEXP);
    __result = Rcpp::wrap(gpd_isotonic_scale_projected_gradient(y, scale, shape, max_repetitions));
    return __result;
END_RCPP
}
// isotonic_scale_gpd_estimator
List isotonic_scale_gpd_estimator(NumericVector y, double min_shape, double max_shape, double by, int max_repetitions);
RcppExport SEXP gpdIcm_isotonic_scale_gpd_estimator(SEXP ySEXP, SEXP min_shapeSEXP, SEXP max_shapeSEXP, SEXP bySEXP, SEXP max_repetitionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type min_shape(min_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type max_shape(max_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type by(bySEXP);
    Rcpp::traits::input_parameter< int >::type max_repetitions(max_repetitionsSEXP);
    __result = Rcpp::wrap(isotonic_scale_gpd_estimator(y, min_shape, max_shape, by, max_repetitions));
    return __result;
END_RCPP
}
// compute_nll_gpd
double compute_nll_gpd(NumericVector y, NumericVector scale, double shape);
RcppExport SEXP gpdIcm_compute_nll_gpd(SEXP ySEXP, SEXP scaleSEXP, SEXP shapeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    __result = Rcpp::wrap(compute_nll_gpd(y, scale, shape));
    return __result;
END_RCPP
}
// compute_pd1_scale_nll_gpd
double compute_pd1_scale_nll_gpd(double y, double scale, double shape);
RcppExport SEXP gpdIcm_compute_pd1_scale_nll_gpd(SEXP ySEXP, SEXP scaleSEXP, SEXP shapeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    __result = Rcpp::wrap(compute_pd1_scale_nll_gpd(y, scale, shape));
    return __result;
END_RCPP
}
